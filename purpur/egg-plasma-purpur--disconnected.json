{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2023-12-17T00:25:58+00:00",
    "name": "Plasma Purpur (Disconnected)",
    "author": "admin@plasmere.net",
    "description": "Plashost's optimised (disconnected) Purpur Pterodactyl configuration.",
    "features": null,
    "docker_images": {
        "Temurin Java 21": "ghcr.io\/software-noob\/pterodactyl-images:java_21",
        "Temurin Java 20": "ghcr.io\/software-noob\/pterodactyl-images:java_20",
        "Temurin Java 19": "ghcr.io\/software-noob\/pterodactyl-images:java_19",
        "Temurin Java 17": "ghcr.io\/software-noob\/pterodactyl-images:java_17",
        "Temurin Java 16": "ghcr.io\/software-noob\/pterodactyl-images:java_16",
        "Temurin Java 11": "ghcr.io\/software-noob\/pterodactyl-images:java_11",
        "Temurin Java 8": "ghcr.io\/software-noob\/pterodactyl-images:java_8"
    },
    "file_denylist": [],
    "startup": "java -Xms$(({{SERVER_MEMORY}} - ({{SERVER_MEMORY}}\/25)))M -Xmx$(({{SERVER_MEMORY}} - ({{SERVER_MEMORY}}\/25)))M --add-modules=jdk.incubator.vector -XX:+UseG1GC -XX:+ParallelRefProcEnabled -XX:MaxGCPauseMillis=200 -XX:+UnlockExperimentalVMOptions -XX:+DisableExplicitGC -XX:G1NewSizePercent=30 -XX:G1MaxNewSizePercent=40 -XX:G1HeapRegionSize=8M -XX:G1ReservePercent=20 -XX:G1HeapWastePercent=5 -XX:G1MixedGCCountTarget=4 -XX:InitiatingHeapOccupancyPercent=15 -XX:G1MixedGCLiveThresholdPercent=90 -XX:G1RSetUpdatingPauseTimePercent=5 -XX:SurvivorRatio=32 -XX:+PerfDisableSharedMem -XX:MaxTenuringThreshold=1 -Dusing.aikars.flags=https:\/\/mcflags.emc.gs -Daikars.new.flags=true -jar {{SERVER_JARFILE}}",
    "config": {
        "files": "{\r\n    \"server.properties\": {\r\n        \"parser\": \"properties\",\r\n        \"find\": {\r\n            \"server-ip\": \"0.0.0.0\",\r\n            \"server-port\": \"{{server.build.default.port}}\"\r\n        }\r\n    },\r\n    \"spigot.yml\": {\r\n        \"parser\": \"yml\",\r\n        \"find\": {\r\n            \"settings.bungeecord\": false\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \")! For help, type \",\r\n    \"userInteraction\": [\r\n        \"Go to eula.txt for more info.\"\r\n    ]\r\n}",
        "logs": "{}",
        "stop": "stop"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/ash\r\n# Made by Plashost\r\n\r\necho \"Starting Purpur installation script...\"\r\n\r\nPROJECT=purpur\r\nDL_PATH=\"${DL_PATH:-}\"\r\nMINECRAFT_VERSION=\"${MINECRAFT_VERSION:-}\"\r\nBUILD_NUMBER=\"${BUILD_NUMBER:-}\"\r\nOVERRIDE_FILES=\"${OVERRIDE_FILES:-0}\"\r\n\r\ncheck_override() {\r\n    [ \"${OVERRIDE_FILES}\" -eq 1 ]\r\n}\r\n\r\ndownload_file() {\r\n    local file_name=$1\r\n    local url=$2\r\n    echo \"Checking if download is needed for ${file_name}...\"\r\n    if [ ! -f \"${file_name}\" ] || check_override; then\r\n        backup_file ${file_name}\r\n        echo \"Downloading ${file_name} from ${url}\"\r\n        curl -o \"${file_name}\" \"${url}\"\r\n    else\r\n        echo \"${file_name} already exists and OVERRIDE_FILES is not set. Skipping download.\"\r\n    fi\r\n}\r\n\r\nbackup_file() {\r\n    local file_name=$1\r\n    if [ -f \"${file_name}\" ]; then\r\n        echo \"Backing up ${file_name}...\"\r\n        mv \"${file_name}\" \"old-$(date +%Y%m%d%H%M%S).${file_name}\"\r\n    fi\r\n}\r\n\r\ncd \/mnt\/server\r\n\r\n# Setting default server jar file name if not set\r\nSERVER_JARFILE=\"${SERVER_JARFILE:-purpur.jar}\"\r\n\r\n# Move old server jar file if it exists\r\nif [ -f \"${SERVER_JARFILE}\" ]; then\r\n    echo \"Backing up existing server jar file...\"\r\n    mv \"${SERVER_JARFILE}\" \"${SERVER_JARFILE}.old\"\r\nfi\r\n\r\n# Logic to determine the download URL\r\nif [ -n \"${DL_PATH}\" ]; then\r\n    echo \"Using supplied download URL: ${DL_PATH}\"\r\n    DOWNLOAD_URL=$(eval echo $(echo ${DL_PATH} | sed -e 's\/{{\/${\/g' -e 's\/}}\/}\/g'))\r\nelse\r\n    echo \"Fetching version information for ${PROJECT}...\"\r\n    # Logic to fetch the latest or specified version and build\r\n    VER_EXISTS=$(curl -s https:\/\/api.purpurmc.org\/v2\/${PROJECT} | jq -r --arg VERSION \"$MINECRAFT_VERSION\" '.versions[] | contains($VERSION)' | grep true)\r\n    LATEST_VERSION=$(curl -s https:\/\/api.purpurmc.org\/v2\/${PROJECT} | jq -r '.versions' | jq -r '.[-1]')\r\n\r\n    if [ \"${VER_EXISTS}\" == \"true\" ]; then\r\n        echo -e \"Version is valid. Using version ${MINECRAFT_VERSION}\"\r\n    else\r\n        echo -e \"Using the latest ${PROJECT} version\"\r\n        MINECRAFT_VERSION=${LATEST_VERSION}\r\n    fi\r\n    \r\n    BUILD_EXISTS=$(curl -s https:\/\/api.purpurmc.org\/v2\/${PROJECT}\/${MINECRAFT_VERSION} | jq -r --arg BUILD \"${BUILD_NUMBER}\" '.builds.all | tostring | contains($BUILD)' | grep true)\r\n    LATEST_BUILD=$(curl -s https:\/\/api.purpurmc.org\/v2\/${PROJECT}\/${MINECRAFT_VERSION} | jq -r '.builds.latest')\r\n    \r\n    if [ \"${BUILD_EXISTS}\" == \"true\" ]; then\r\n        echo -e \"Build is valid for version ${MINECRAFT_VERSION}. Using build ${BUILD_NUMBER}\"\r\n    else\r\n        echo -e \"Using the latest ${PROJECT} build for version ${MINECRAFT_VERSION}\"\r\n        BUILD_NUMBER=${LATEST_BUILD}\r\n    fi\r\n\r\n   DOWNLOAD_URL=\"https:\/\/api.purpurmc.org\/v2\/${PROJECT}\/${MINECRAFT_VERSION}\/${BUILD_NUMBER}\/download\"\r\nfi\r\n\r\necho \"Downloading server jar file from ${DOWNLOAD_URL}\"\r\nbackup_file \"${SERVER_JARFILE}\"\r\ncurl -o \"${SERVER_JARFILE}\" \"${DOWNLOAD_URL}\"\r\n\r\n# Download configuration files\r\necho \"Downloading configuration files...\"\r\ndownload_file \"server.properties\" \"https:\/\/raw.githubusercontent.com\/PlasHost\/PlasmaEggs\/main\/purpur\/server.properties\"\r\nmkdir .\/config\r\ncd .\/config\r\ndownload_file \"paper-world-defaults.yml\" \"https:\/\/raw.githubusercontent.com\/PlasHost\/PlasmaEggs\/main\/purpur\/config\/paper-world-defaults.yml\"\r\ndownload_file \"paper-global.yml\" \"https:\/\/raw.githubusercontent.com\/PlasHost\/PlasmaEggs\/main\/purpur\/config\/paper-global.yml\"\r\ncd ..\r\ndownload_file \"pufferfish.yml\" \"https:\/\/raw.githubusercontent.com\/PlasHost\/PlasmaEggs\/main\/purpur\/pufferfish.yml\"\r\ndownload_file \"purpur.yml\" \"https:\/\/raw.githubusercontent.com\/PlasHost\/PlasmaEggs\/main\/purpur\/purpur.yml\"\r\ndownload_file \"spigot.yml\" \"https:\/\/raw.githubusercontent.com\/PlasHost\/PlasmaEggs\/main\/purpur\/spigot.yml\"\r\ndownload_file \"bukkit.yml\" \"https:\/\/raw.githubusercontent.com\/PlasHost\/PlasmaEggs\/main\/purpur\/bukkit.yml\"\r\ndownload_file \"README.md\" \"https:\/\/raw.githubusercontent.com\/PlasHost\/PlasmaEggs\/main\/purpur\/README.md\"\r\ndownload_file \"eula.txt\" \"https:\/\/raw.githubusercontent.com\/PlasHost\/PlasmaEggs\/main\/global\/eula.txt\"\r\n\r\necho \"Installation complete!\"",
            "container": "ghcr.io\/pterodactyl\/installers:alpine",
            "entrypoint": "ash"
        }
    },
    "variables": [
        {
            "name": "Minecraft Version",
            "description": "The version of Minecraft to download. This is preset to 'latest'.\r\nSet to 'latest' to always get the latest version. Invalid versions will default to 'latest'.",
            "env_variable": "MINECRAFT_VERSION",
            "default_value": "latest",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:10",
            "field_type": "text"
        },
        {
            "name": "Server Jar File",
            "description": "The name of the server jar file to run the server with.",
            "env_variable": "SERVER_JARFILE",
            "default_value": "purpur.jar",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:30",
            "field_type": "text"
        },
        {
            "name": "Build Number (DEPRECIATED)",
            "description": "The build number for the server software release.\r\n\r\nLeave at latest to always get the latest version. Invalid versions will default to latest.",
            "env_variable": "BUILD_NUMBER",
            "default_value": "latest",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Smart Startup",
            "description": "Compensate for JVM overhead. Recommended.\r\n\r\nLeave as true for best stability. Invalid values will default to true.",
            "env_variable": "SMART_STARTUP",
            "default_value": "true",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|string|max:5",
            "field_type": "text"
        },
        {
            "name": "Override Files",
            "description": "Write over files on install? 1 = yes, 0 = no",
            "env_variable": "OVERRIDE_FILES",
            "default_value": "1",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|integer|max:1",
            "field_type": "text"
        }
    ]
}
